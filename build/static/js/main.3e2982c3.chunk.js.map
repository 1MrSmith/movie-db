{"version":3,"sources":["components/Login/style.module.scss","components/NotFound/style.module.scss","components/NavBar/style.module.scss","components/SideBar/style.module.scss","components/List/style.module.scss","store/tv-show/common/index.js","services/rest.service.js","services/local-storage.service.js","utils/mark-response-videos.js","utils/fetch-data-store.js","config.js","store/tv-show/list/index.js","store/tv-show/item/index.js","store/tv-show/index.js","store/index.js","components/AppContext/index.js","utils/error.js","utils/add-to-bookmark.js","components/Card/index.js","components/List/index.js","components/Home/index.js","hooks/useInputForm.js","components/Login/index.js","components/NotFound/index.js","components/PrivateRoute/index.js","components/CardDetails/index.js","components/TVShow/index.js","components/TabSearch/index.js","components/Search/index.js","utils/get-quantity-pages.js","components/PanelLibrary/index.js","components/MyLibrary/index.js","routes/index.js","components/SideBar/index.js","utils/debounce.js","components/SearchBox/index.js","components/NavBar/index.js","components/Bars/index.js","utils/history.js","components/App/index.js","serviceWorker.js","index.js","components/Card/style.module.scss","components/CardDetails/style.module.scss","components/Home/style.module.scss","components/TVShow/style.module.scss","components/TabSearch/style.module.scss","components/Search/style.module.scss","components/PanelLibrary/style.module.scss","components/MyLibrary/style.module.scss","components/SearchBox/style.module.scss"],"names":["module","exports","actionTypes","startLoadingTVShows","payload","type","handleSuccessLoadingTVShows","reducer","state","isLoading","apiKey","getPopular","pageId","a","axios","get","response","data","getPopularById","typeId","searchByName","query","asyncLocalStorage","setItem","key","value","localStorage","getItem","markResponseVideos","responseVideos","bookmarkVideos","map","item","includes","String","id","checked","fetchStoreData","dispatch","startLoading","handleSuccess","fetch","config","noAccessMessage","keyLocalStorage","noContent","baseImgUrl","cardsOnPage","delay","typeVideos","movie","tvShow","pages","search","searchResults","myLibrary","myLibraryCaption","routes","home","title","url","login","logout","detailsUrl","paginationUrl","paginationPage","tabs","movies","tvShows","searchUrl","tvShowsList","tvShowDetail","reduceReducers","commonReducer","listReducer","itemReducer","middlewares","rootReducer","combineReducers","tvShowsReducer","AppContext","createContext","useAppContext","useContext","error","message","toString","Error","alert","addToBookmark","user","typeVideo","bookmarkId","match","moviesLibrary","index","findIndex","push","splice","tvShowLibrary","memo","props","userSearchString","history","useHistory","onChange","event","target","name","userStorage","JSON","parse","updatedUser","stringify","className","style","onClick","to","src","imageLink","alt","defaultChecked","htmlFor","setRunPush","length","poster_path","currentPage","activePage","pageCount","totalPage","pageLinkClassName","currentLinkClassName","onPageClick","page","setMovies","moviePages","searchString","setIsLoading","setMoviePages","isAuthenticated","params","useParams","useEffect","markedVideos","results","total_pages","loadData","Spinner","animation","variant","field","useInputForm","initialState","useReducer","loginEmail","loginPassword","input","userHasAuthenticated","handleSubmit","preventDefault","isAuth","FormGroup","controlId","FormLabel","FormControl","autoFocus","placeholder","Button","block","disabled","children","connect","loadTVShowDescription","payLoad","useState","cardDetails","setCardDetails","location","pathname","split","slice","toLowerCase","Promise","all","overview","labels","datasets","label","vote_average","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","legend","fontColor","scales","xAxes","ticks","scaleLabel","gridLines","color","yAxes","loadTVShows","loadStoreData","e","activeTab","tvs","setTvs","tvPages","setTvPages","loadSearchData","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","getQuantityPages","paramsId","arrayLength","startIndex","endIndex","Math","ceil","element","moviesLibraryOnPage","tvShowLibraryOnPage","exact","path","cleanUp","handleLogout","size","icon","faHamburger","activeclassname","faHome","faFileVideo","faVideo","faAddressBook","faSignOutAlt","faSignInAlt","debounce","callback","time","interval","args","clearTimeout","setTimeout","setValue","debounced","useCallback","nextValue","Form","inline","InputGroup","Prepend","Text","aria-describedby","NavItem","createBrowserHistory","runPush","checkLocalStorage","Provider","Boolean","window","hostname","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3e2982c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-wrapper\":\"style_form-wrapper__37STz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"not-found\":\"style_not-found__2Ui7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-bar\":\"style_nav-bar__TN4te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side-bar\":\"style_side-bar__1vvQt\",\"nav-icon\":\"style_nav-icon__p6gtK\",\"nav-text\":\"style_nav-text__uzns2\",\"logo\":\"style_logo__2ipVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-list\":\"style_section-list__14nDy\",\"section-list__container\":\"style_section-list__container__3cFHw\",\"section-list__item\":\"style_section-list__item__2jiXu\",\"section-list__no-content\":\"style_section-list__no-content__3weTJ\",\"section-list__pagination\":\"style_section-list__pagination__M22hZ\",\"pageLink\":\"style_pageLink__1iotN\",\"currentLink\":\"style_currentLink__2yDf9\"};","const actionTypes = {\r\n  TVSHOWS_START_LOADING: 'TVSHOWS_START_LOADING',\r\n  TVSHOWS_HANDLE_SUCCESS: 'TVSHOWS_HANDLE_SUCCESS',\r\n};\r\n\r\nexport const startLoadingTVShows = (payload) => {\r\n  return { type: actionTypes.TVSHOWS_START_LOADING, payload };\r\n}\r\nexport const handleSuccessLoadingTVShows = (payload) => {\r\n  return { type: actionTypes.TVSHOWS_HANDLE_SUCCESS, payload };\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.TVSHOWS_START_LOADING:\r\n      return { ...state, isLoading: payload };\r\n    case actionTypes.TVSHOWS_HANDLE_SUCCESS:\r\n      return { ...state, isLoading: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\nconst apiKey = '5628e59945411114e5c3545e385349d1';\r\n\r\nexport const getPopular = async (pageId, type) => {\r\n  const response = await axios\r\n  .get(`https://api.themoviedb.org/3/${type}/popular?api_key=${apiKey}&language=en-US&page=${pageId}`);\r\n\r\n  return response.data || null;\r\n}\r\n\r\nexport const getPopularById = async (typeId, type) => {\r\n  const response = await axios\r\n  .get(`https://api.themoviedb.org/3/${type}/${typeId}?api_key=${apiKey}&language=en-US`);\r\n\r\n  return response.data || null;\r\n}\r\n\r\nexport const searchByName = async (query, pageId, type) => {\r\n  const response = await axios\r\n  .get(`https://api.themoviedb.org/3/search/${type}?api_key=${apiKey}&language=en-US&query=${query}&page=${pageId}&include_adult=false`);\r\n\r\n  return response.data || null;\r\n}\r\n","const asyncLocalStorage = {\r\n  setItem: async (key, value) => localStorage.setItem(key, value),\r\n  getItem: async (key) => localStorage.getItem(key),\r\n}\r\n\r\nexport default asyncLocalStorage;\r\n","const markResponseVideos = (responseVideos = [], bookmarkVideos = []) =>\r\n    responseVideos.map(\r\n      (item) => bookmarkVideos.includes(String(item.id)) ? {...item, checked: true} : item);\r\n\r\nexport default markResponseVideos;","const fetchStoreData = async ({\r\n  dispatch,\r\n  startLoading,\r\n  handleSuccess,\r\n  fetch,\r\n}) => {\r\n\r\n  const response = await fetch();\r\n  const isLoading = response ? false : true;\r\n\r\n  if (typeof startLoading === 'function') {\r\n    dispatch(startLoading(isLoading));\r\n  }\r\n\r\n  if (typeof handleSuccess === 'function') {\r\n    dispatch(handleSuccess(isLoading));\r\n  }\r\n\r\n}\r\n\r\nexport default fetchStoreData;","const config = {\r\n  noAccessMessage: 'No access. Try again',\r\n  keyLocalStorage: 'user',\r\n  noContent: 'No content',\r\n  baseImgUrl: 'https://image.tmdb.org/t/p/w500',\r\n\r\n  cardsOnPage: 20,\r\n\r\n  delay: 2000,\r\n\r\n  typeVideos: {\r\n    movie: 'movie',\r\n    tvShow: 'tv',\r\n  },\r\n\r\n  pages: {\r\n    search: {\r\n      searchResults: 'Search results:',\r\n    },\r\n    myLibrary: {\r\n      myLibraryCaption: 'My library:',\r\n    },\r\n  },\r\n\r\n  routes: {\r\n    home: {\r\n      title: 'Home',\r\n      url: '/',\r\n    },\r\n    login: {\r\n      title: 'Login',\r\n      url: '/login',\r\n    },\r\n    logout: {\r\n      title: 'Logout',\r\n    },\r\n    tvShow: {\r\n      title: 'TV Shows',\r\n      detailsUrl: '/tv-shows/:id',\r\n      paginationUrl: '/tv-shows/page/:id',\r\n      paginationPage: '/tv-shows/page',\r\n      url: '/tv-shows',\r\n    },\r\n    myLibrary: {\r\n      title: 'My Library',\r\n      paginationUrl: '/my-library/:typeVideo/page/:id',\r\n      tabs: {\r\n        movies: 'Movies',\r\n        tvShows: 'TV Shows',\r\n      },\r\n      url: '/my-library',\r\n    },\r\n    search: {\r\n      title: 'Search',\r\n      searchUrl: '/search/:query/page/:id',\r\n      tabs: {\r\n        movies: 'Movies',\r\n        tvShows: 'TV Shows',\r\n      },\r\n      url: '/search',\r\n    },\r\n    movie: {\r\n      title: 'Movies',\r\n      detailsUrl: '/movies/:id',\r\n      paginationUrl: '/movies/page/:id',\r\n      paginationPage: '/movies/page',\r\n      url: '/movies',\r\n    },\r\n  },\r\n}\r\n\r\nexport default config;","import { getPopular } from '../../../services/rest.service';\r\nimport asyncLocalStorage from '../../../services/local-storage.service';\r\nimport markResponseVideos from '../../../utils/mark-response-videos';\r\nimport fetchStoreData from '../../../utils/fetch-data-store';\r\nimport {\r\n  startLoadingTVShows,\r\n  handleSuccessLoadingTVShows,\r\n} from '../common';\r\nimport config from '../../../config';\r\n\r\nconst actionTypes = {\r\n  SET_TVSHOWS_LIST: 'SET_TVSHOWS_LIST',\r\n};\r\n\r\nexport const setTVShowsList = (payload) => {\r\n  return { type: actionTypes.SET_TVSHOWS_LIST, payload };\r\n}\r\n\r\nexport const loadTVShows = (pageId) => {\r\n  return (dispatch) =>\r\n    fetchStoreData({\r\n      dispatch,\r\n      startLoading: startLoadingTVShows,\r\n      handleSuccess: handleSuccessLoadingTVShows,\r\n\r\n      fetch: async () => {\r\n        const data = await getPopular(pageId, config.typeVideos.tvShow);\r\n        const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n        const user = JSON.parse(userStorage);\r\n        const markedVideos = markResponseVideos(data?.results, user?.tvShowLibrary);\r\n\r\n        dispatch(setTVShowsList({...data, markedVideos}));\r\n        return data;\r\n      },\r\n    });\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_TVSHOWS_LIST:\r\n      return { ...state, tvShowsList: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { getPopularById } from '../../../services/rest.service';\r\nimport fetchStoreData from '../../../utils/fetch-data-store';\r\nimport {\r\n  startLoadingTVShows,\r\n  handleSuccessLoadingTVShows,\r\n} from '../common';\r\nimport config from '../../../config';\r\n\r\nconst actionTypes = {\r\n  SET_TVSHOWS_ITEM: 'SET_TVSHOWS_ITEM',\r\n};\r\n\r\nexport const setTVShowsItem = (payload) => {\r\n  return { type: actionTypes.SET_TVSHOWS_ITEM, payload };\r\n}\r\n\r\nexport const loadTVShowDescription = (typeId) => {\r\n  return (dispatch) =>\r\n    fetchStoreData({\r\n      dispatch,\r\n      startLoading: startLoadingTVShows,\r\n      handleSuccess: handleSuccessLoadingTVShows,\r\n\r\n      fetch: async () => {\r\n        const data = await getPopularById(typeId, config.typeVideos.tvShow);\r\n\r\n        dispatch(setTVShowsItem(data));\r\n        return data;\r\n      },\r\n    });\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_TVSHOWS_ITEM:\r\n      return { ...state, tvShowDetail: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import reduceReducers from 'reduce-reducers';\r\n\r\nimport commonReducer from './common';\r\nimport listReducer from './list';\r\nimport itemReducer from './item';\r\n\r\nexport * from './list';\r\nexport * from './item';\r\n\r\nexport default reduceReducers(\r\n  {\r\n    tvShowDetail: {},\r\n    tvShowsList: {},\r\n    isLoading: true,\r\n  },\r\n  commonReducer,\r\n  listReducer,\r\n  itemReducer,\r\n);\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport tvShowsReducer from './tv-show';\r\n\r\nconst middlewares = [];\r\n\r\nconst rootReducer = combineReducers({\r\n  tvShowsReducer,\r\n});\r\n\r\nexport const configureStore = (initialState) => {\r\n  const store = createStore(rootReducer, initialState, applyMiddleware(thunk, ...middlewares));\r\n\r\n  return store;\r\n};","import { useContext, createContext } from 'react';\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n","const error = (error) => {\r\n  let message = error.toString();\r\n\r\n  if (!(error instanceof Error) && error.message) {\r\n    message = error.message;\r\n  }\r\n\r\n  alert(message);\r\n}\r\n\r\nexport default error;\r\n","import config from '../config';\r\n\r\nconst addToBookmark = (user, typeVideo, bookmarkId) => {\r\n\r\n  if (typeVideo.match(config.typeVideos.movie)) {\r\n\r\n    const { moviesLibrary = [] } = user;\r\n    const index = moviesLibrary.findIndex((item) => item === bookmarkId);\r\n    index === -1 ? moviesLibrary.push(bookmarkId) : moviesLibrary.splice(index, 1);\r\n    user.moviesLibrary = moviesLibrary;\r\n\r\n  } else {\r\n\r\n    const { tvShowLibrary = [] } = user;\r\n    const index = tvShowLibrary.findIndex((item) => item === bookmarkId);\r\n    index === -1 ? tvShowLibrary.push(bookmarkId) : tvShowLibrary.splice(index, 1);\r\n    user.tvShowLibrary = tvShowLibrary;\r\n\r\n  }\r\n\r\n  return user;\r\n}\r\n\r\nexport default addToBookmark;","import React, { Fragment, memo, } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport addToBookmark from '../../utils/add-to-bookmark';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst Card = (props) => {\r\n  const { userSearchString } = useAppContext();\r\n  const history = useHistory();\r\n\r\n  const cleanUp = () => {\r\n    userSearchString('');\r\n  }\r\n\r\n  const onChange = async (event) => {\r\n\r\n    const id = event.target.name;\r\n    const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n    const user = JSON.parse(userStorage);\r\n\r\n    if (user) {\r\n      const updatedUser = addToBookmark(user, props.typeVideo, id);\r\n\r\n      await asyncLocalStorage.setItem(config.keyLocalStorage, JSON.stringify(updatedUser));\r\n    } else {\r\n      history.push(config.routes.login.url);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link\r\n      className={style['section-card']}\r\n      onClick={cleanUp}\r\n      to={`${props.detailsUrl}/${props.id}`}>\r\n\r\n        <div\r\n        className={style['section-card__wrapper']}>\r\n\r\n          <img\r\n          className={style['section-card__img']}\r\n          src={props.imageLink ? props.imageLink : ''}\r\n          alt={props.title} />\r\n\r\n        </div>\r\n\r\n      </Link>\r\n      <span\r\n      className={style['bookmark']}>\r\n\r\n        <input\r\n        type='checkbox'\r\n        className={style['bookmark-input']}\r\n        name={props.id}\r\n        id={props.id}\r\n        defaultChecked={props.checked}\r\n        onClick={onChange} />\r\n\r\n        <label\r\n        htmlFor={props.id}\r\n        className={style['bookmark-star']}></label>\r\n\r\n      </span>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(Card);\r\n","import React, { Fragment, memo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport Card from '../Card';\r\nimport config from '../../config';\r\nimport Pagination from 'pagination-component';\r\nimport style from './style.module.scss';\r\n\r\nconst List = (props) => {\r\n  const history = useHistory();\r\n  const { setRunPush } = useAppContext();\r\n\r\n  const onClick = (page) => {\r\n    history.push(`${props.paginationUrl}/${page + 1}`);\r\n    setRunPush(`${props.paginationUrl}/${page + 1}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n      className={style['section-list']}>\r\n\r\n        <div className={style['section-list__container']}>\r\n\r\n          {props.data.length\r\n          ? props.data.map((item) => (\r\n              <div\r\n              key={item.id}\r\n              className={style['section-list__item']}>\r\n\r\n                <Card\r\n                key={item.id}\r\n                id={item.id}\r\n                title={item.name ? item.name : item.title}\r\n                imageLink={`${config.baseImgUrl}${item.poster_path}`}\r\n                detailsUrl={props.detailsUrl}\r\n                typeVideo={props.typeVideo}\r\n                checked={item?.checked} />\r\n\r\n              </div>\r\n\r\n            ))\r\n\r\n          : <div\r\n            className={style['section-list__no-content']}>\r\n\r\n              <h2>{config.noContent}</h2>\r\n\r\n            </div>\r\n\r\n          }\r\n\r\n          {props.data.length\r\n          ? <div\r\n            className={style['section-list__pagination']}>\r\n\r\n              <Pagination\r\n              currentPage={props.activePage - 1}\r\n              pageCount={props.totalPage}\r\n              pageLinkClassName={style['pageLink']}\r\n              currentLinkClassName={style['currentLink']}\r\n              onPageClick={onClick} />\r\n\r\n            </div>\r\n\r\n          : <Fragment></Fragment>\r\n\r\n          }\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(List);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useEffect,\r\n} from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport { getPopular } from '../../services/rest.service';\r\nimport markResponseVideos from '../../utils/mark-response-videos';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport error from '../../utils/error';\r\nimport config from '../../config';\r\nimport List from '../List';\r\nimport style from './style.module.scss';\r\n\r\nconst Home = () => {\r\n  const {\r\n    movies,\r\n    setMovies,\r\n    isLoading,\r\n    moviePages,\r\n    searchString,\r\n    setIsLoading,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  } = useAppContext();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString.length > 2) {\r\n      history.push(`${config.routes.search.url}/${searchString}/page/1`);\r\n    }\r\n\r\n  }, [history, searchString]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async() => {\r\n      try {\r\n\r\n        if (isAuthenticated) {\r\n          setIsLoading(true);\r\n\r\n          let pageId;\r\n          if (params.query) {\r\n            pageId = 1;\r\n          } else {\r\n            pageId = params.id;\r\n          }\r\n\r\n          const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n          const user = JSON.parse(userStorage);\r\n\r\n          const data = await getPopular(pageId, config.typeVideos.movie);\r\n\r\n          const markedVideos = markResponseVideos(data.results, user?.moviesLibrary);\r\n\r\n          setMovies(markedVideos);\r\n          setMoviePages({\r\n            page: data.page,\r\n            totalPage: data.total_pages,\r\n          });\r\n\r\n        }\r\n\r\n        setIsLoading(false);\r\n\r\n      } catch (e) {\r\n        error(e);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    loadData();\r\n\r\n  }, [\r\n    setMovies,\r\n    params.id,\r\n    params.query,\r\n    setIsLoading,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading\r\n      ? <div\r\n        className={style['page']}>\r\n\r\n          <List\r\n          data={movies}\r\n          detailsUrl={config.routes.movie.url}\r\n          paginationUrl={config.routes.movie.paginationPage}\r\n          activePage={moviePages.page}\r\n          totalPage={moviePages.totalPage}\r\n          typeVideo={config.typeVideos.movie} />\r\n\r\n        </div>\r\n\r\n      : <div\r\n        className={style['page']}>\r\n\r\n          <Spinner\r\n          animation='border'\r\n          variant='secondary' />\r\n\r\n        </div>\r\n\r\n      }\r\n\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default memo(Home);\r\n","import { useReducer } from 'react';\r\n\r\nconst reducer = (state, { field, value }) => {\r\n  return {\r\n    ...state,\r\n    [field]: value,\r\n  }\r\n}\r\n\r\nconst useInputForm = (initialState) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const onChange = (event) => {\r\n    dispatch({ field: event.target.name, value: event.target.value });\r\n  }\r\n\r\n  return {\r\n    loginEmail: state?.loginEmail || '',\r\n    loginPassword: state?.loginPassword || '',\r\n    onChange,\r\n  }\r\n}\r\n\r\nexport default useInputForm;\r\n","import React, { memo } from 'react';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport error from '../../utils/error';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport useInputForm from '../../hooks/useInputForm';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst Login = () => {\r\n  const input = useInputForm(null);\r\n  const history = useHistory();\r\n  const { userHasAuthenticated } = useAppContext();\r\n\r\n  const validateForm = () => input.loginEmail.length > 0 && input.loginPassword.length > 0;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      if (input.loginEmail === 'test@test.test' &&\r\n        input.loginPassword === 'test1234') {\r\n          userHasAuthenticated(true);\r\n          const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n          let user = JSON.parse(userStorage);\r\n\r\n          if (user) {\r\n\r\n            user.isAuth = true;\r\n\r\n          } else {\r\n\r\n            user = {\r\n              isAuth: true,\r\n            };\r\n\r\n          }\r\n\r\n          await asyncLocalStorage.setItem(config.keyLocalStorage, JSON.stringify(user));\r\n          history.push(config.routes.home.url);\r\n      } else {\r\n        alert(`${config.noAccessMessage}`);\r\n      }\r\n    } catch(e) {\r\n      error(e);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div\r\n    className={style['form-wrapper']}>\r\n\r\n      <form>\r\n\r\n        <FormGroup\r\n        controlId='email'>\r\n\r\n          <FormLabel>Email</FormLabel>\r\n\r\n          <FormControl\r\n          autoFocus\r\n          type='email'\r\n          name='loginEmail'\r\n          placeholder='Type test@test.test'\r\n          value={input.loginEmail}\r\n          onChange={input.onChange} />\r\n\r\n        </FormGroup>\r\n\r\n        <FormGroup\r\n        controlId='password'>\r\n\r\n          <FormLabel>Password</FormLabel>\r\n\r\n          <FormControl\r\n            type='password'\r\n            name='loginPassword'\r\n            placeholder='Type test1234'\r\n            value={input.loginPassword}\r\n            onChange={input.onChange} />\r\n\r\n        </FormGroup>\r\n\r\n        <Button\r\n        block\r\n        type='button'\r\n        variant='dark'\r\n        onClick={handleSubmit}\r\n        disabled={!validateForm()}>Login</Button>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Login);\r\n","import React, { memo } from 'react';\r\nimport style from './style.module.scss';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div\r\n    className={style['not-found']}>\r\n\r\n      <h3>Sorry, page not found!</h3>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(NotFound);\r\n","import React, { Fragment, memo, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport config from '../../config';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const history = useHistory();\r\n  const { isAuthenticated } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.push(config.routes.login.url);\r\n    }\r\n  }, [history, isAuthenticated]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(PrivateRoute);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {\r\n  Fragment,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { getPopularById } from '../../services/rest.service';\r\nimport { useAppContext } from '../AppContext';\r\nimport { loadTVShowDescription } from '../../store/tv-show';\r\nimport error from '../../utils/error';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\n\r\nconst CardDetails = (props) => {\r\n  const [cardDetails, setCardDetails] = useState(null);\r\n  const { isAuthenticated, searchString } = useAppContext();\r\n  const { tvShowDetail, isLoading, } = props.tvShowDetail;\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const loadStoreData = (typeId) => Promise.all([props.loadTVShowDescription(typeId)]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString.length > 2) {\r\n      history.push(`${config.routes.search.url}/${searchString}/page/1`);\r\n    }\r\n\r\n  }, [history, searchString]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async() => {\r\n      try {\r\n        if (isAuthenticated) {\r\n          let type;\r\n          const pathSplit = history.location.pathname.split('/').slice(1);\r\n          if (pathSplit[0].toLowerCase().match(config.routes.movie.title.toLowerCase())) {\r\n            type = config.typeVideos.movie;\r\n            const data = await getPopularById(params.id, type);\r\n            setCardDetails(data);\r\n          } else {\r\n            type = config.typeVideos.tvShow;\r\n            loadStoreData(params.id);\r\n          }\r\n\r\n        }\r\n      } catch (e) {\r\n        error(e);\r\n      }\r\n    }\r\n    loadData();\r\n  }, [\r\n    isLoading,\r\n    params.id,\r\n    isAuthenticated,\r\n    history.location.pathname,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {cardDetails||tvShowDetail\r\n      ? <div\r\n        className={style['section-card']}>\r\n\r\n          <img\r\n          className={style['section-card__image']}\r\n          src={cardDetails ? `${config.baseImgUrl}${cardDetails.poster_path}` : `${config.baseImgUrl}${tvShowDetail.poster_path}`}\r\n          alt={cardDetails ? cardDetails.title : tvShowDetail.name} />\r\n\r\n          <div\r\n          className={style['section-card__description']}>\r\n            <h2>{cardDetails ? cardDetails.title : tvShowDetail.name}</h2>\r\n            {cardDetails?.overview || tvShowDetail?.overview}\r\n\r\n            <div\r\n            className={style['section-card__graph']}>\r\n\r\n              <HorizontalBar data={{\r\n              labels: [cardDetails ? cardDetails.title : tvShowDetail.name],\r\n              datasets: [\r\n                {\r\n                  label: 'Rating',\r\n                  data: [cardDetails ? cardDetails.vote_average : tvShowDetail.vote_average],\r\n                  backgroundColor: 'rgba(49,64,82,0.4)',\r\n                  borderColor: 'rgba(70,95,122,1)',\r\n                  borderWidth: 1,\r\n                  hoverBackgroundColor: 'rgba(49,64,82,0.6)',\r\n                  hoverBorderColor: 'rgba(70,95,122,1)',\r\n                  barThickness: 50,\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: {\r\n                labels: {\r\n                  fontColor: 'rgb(255,255,255)',\r\n                },\r\n              },\r\n              scales: {\r\n                xAxes: [{\r\n                  ticks: {\r\n                    fontColor: 'rgb(255,255,255)',\r\n                  },\r\n                  scaleLabel: {\r\n                    fontColor: 'rgb(255,255,255)',\r\n                  },\r\n                  gridLines: {\r\n                    color: 'transparent'\r\n                  },\r\n                }],\r\n                yAxes: [{\r\n                  ticks: {\r\n                    fontColor: 'rgb(255,255,255)',\r\n                  },\r\n                  gridLines: {\r\n                    color: 'rgb(255,255,255)',\r\n                  },\r\n                }],\r\n              },\r\n            }} />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      : <div\r\n        className={style['page']}>\r\n\r\n          <Spinner\r\n          animation='border'\r\n          variant='secondary' />\r\n\r\n        </div>\r\n\r\n      }\r\n      \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tvShowDetail: state.tvShowsReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadTVShowDescription: (payLoad) => dispatch(loadTVShowDescription(payLoad)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {\r\n  Fragment,\r\n  useEffect,\r\n} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { loadTVShows } from '../../store/tv-show';\r\nimport { useAppContext } from '../AppContext';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport config from '../../config';\r\nimport error from '../../utils/error';\r\nimport List from '../List';\r\nimport style from './style.module.scss';\r\n\r\nconst TVShow = (props) => {\r\n  const {\r\n    searchString,\r\n    isAuthenticated,\r\n  } = useAppContext();\r\n\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const { tvShowsList, isLoading, } = props.tvShowsList;\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString.length > 2) {\r\n      history.push(`${config.routes.search.url}/${searchString}/page/1`);\r\n    }\r\n\r\n  }, [history, searchString]);\r\n\r\n  const loadStoreData = (pageId) => Promise.all([props.loadTVShows(pageId)]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n\r\n      if (isAuthenticated) {\r\n        let pageId;\r\n        if (params.query) {\r\n          pageId = 1;\r\n        } else {\r\n          pageId = params.id;\r\n        }\r\n\r\n        loadStoreData(pageId);\r\n      }\r\n\r\n    } catch (e) {\r\n      error(e);\r\n    }\r\n\r\n  }, [\r\n    params.id,\r\n    isLoading,\r\n    params.query,\r\n    isAuthenticated,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading\r\n      ? <div\r\n        className={style['page']}>\r\n\r\n          <List\r\n          data={tvShowsList?.markedVideos || tvShowsList?.tvShowsList || []}\r\n          detailsUrl={config.routes.tvShow.url}\r\n          paginationUrl={config.routes.tvShow.paginationPage}\r\n          activePage={tvShowsList.page || 1}\r\n          totalPage={tvShowsList.total_pages || 1}\r\n          typeVideo={config.typeVideos.tvShow} />\r\n\r\n        </div>\r\n\r\n      : <div\r\n        className={style['page']}>\r\n\r\n          <Spinner\r\n          animation='border'\r\n          variant='secondary' />\r\n\r\n        </div>\r\n\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tvShowsList: state.tvShowsReducer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadTVShows: (payLoad) => dispatch(loadTVShows(payLoad)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TVShow);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useEffect\r\n} from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport { searchByName } from '../../services/rest.service';\r\nimport markResponseVideos from '../../utils/mark-response-videos';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport error from '../../utils/error';\r\nimport config from '../../config';\r\nimport List from '../List';\r\nimport style from './style.module.scss';\r\n\r\nconst TabSearch = ({ typeVideo, activeTab }) => {\r\n  const {\r\n    tvs,\r\n    movies,\r\n    setTvs,\r\n    tvPages,\r\n    setMovies,\r\n    isLoading,\r\n    moviePages,\r\n    setTvPages,\r\n    setIsLoading,\r\n    searchString,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  } = useAppContext();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString.length > 2) {\r\n      history.push(`${config.routes.search.url}/${searchString}/page/1`);\r\n    }\r\n\r\n  }, [history, searchString]);\r\n\r\n  useEffect(() => {\r\n    const loadSearchData = async () => {\r\n\r\n    try {\r\n\r\n      if (params.query.length > 2 && isAuthenticated) {\r\n        setIsLoading(true);\r\n        const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n        const user = JSON.parse(userStorage);\r\n\r\n        if (activeTab.match(config.routes.movie.title)) {\r\n\r\n          const data = await searchByName(params.query, params.id, config.typeVideos.movie);\r\n\r\n          const markedVideos = markResponseVideos(data.results, user?.moviesLibrary);\r\n\r\n          setMovies(markedVideos);\r\n          setMoviePages({\r\n            page: data.page,\r\n            totalPage: data.total_pages,\r\n          });\r\n\r\n        } else {\r\n          const data = await searchByName(params.query, params.id, config.typeVideos.tvShow);\r\n\r\n          const markedVideos = markResponseVideos(data.results, user?.tvShowLibrary);\r\n\r\n          setTvs(markedVideos);\r\n          setTvPages({\r\n            page: data.page,\r\n            totalPage: data.total_pages,\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    } catch (e) {\r\n      error(e);\r\n      setIsLoading(false);\r\n    }\r\n\r\n  }\r\n  loadSearchData();\r\n\r\n  }, [\r\n    setTvs,\r\n    setMovies,\r\n    params.id,\r\n    typeVideo,\r\n    activeTab,\r\n    setTvPages,\r\n    searchString,\r\n    params.query,\r\n    setIsLoading,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading\r\n      ? <div\r\n        className={style['page']}>\r\n\r\n          {activeTab.match(config.routes.movie.title)\r\n          ? <List\r\n            data={movies}\r\n            detailsUrl={config.routes.movie.url}\r\n            paginationUrl={`${config.routes.search.url}/${params.query}/page`}\r\n            activePage={moviePages.page}\r\n            totalPage={moviePages.totalPage}\r\n            typeVideo={config.typeVideos.movie} />\r\n\r\n          : <List\r\n            data={tvs}\r\n            detailsUrl={config.routes.tvShow.url}\r\n            paginationUrl={`${config.routes.search.url}/${params.query}/page`}\r\n            activePage={tvPages.page}\r\n            totalPage={tvPages.totalPage}\r\n            typeVideo={config.typeVideos.tvShow} />\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n      : <div\r\n        className={style['page__spinner']}>\r\n\r\n          <Spinner\r\n          animation='border'\r\n          variant='secondary' />\r\n\r\n        </div>\r\n\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(TabSearch);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useState,\r\n} from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport TabSearch from '../TabSearch';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst Search = () => {\r\n  const [key, setKey] = useState(config.routes.movie.title);\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const choseTab = (k) => {\r\n    setKey(k);\r\n    history.push(`${config.routes.search.url}/${params.query}/page/1`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n      className={style['page']}>\r\n\r\n        <div\r\n        className={style['page__search-results-title']}>{config.pages.search.searchResults}</div>\r\n\r\n        <Tabs\r\n        activeKey={key}\r\n        onSelect={choseTab}>\r\n          <Tab\r\n          eventKey={config.routes.movie.title}\r\n          title={config.routes.movie.title}>\r\n\r\n            <TabSearch typeVideo={config.typeVideos.movie} activeTab={key} />\r\n\r\n          </Tab>\r\n          <Tab\r\n          eventKey={config.routes.tvShow.title}\r\n          title={config.routes.tvShow.title}>\r\n\r\n            <TabSearch typeVideo={config.typeVideos.tvShow} activeTab={key} />\r\n\r\n          </Tab>\r\n        </Tabs>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default memo(Search);\r\n","import config from '../config';\r\n\r\nconst getQuantityPages = (paramsId, arrayLength) => {\r\n  const startIndex = paramsId - 1 >= 1 ? (paramsId - 1) * config.cardsOnPage : 0;\r\n  const endIndex = startIndex + config.cardsOnPage;\r\n  const page = paramsId || 1;\r\n  const totalPage = Math.ceil(arrayLength / config.cardsOnPage);\r\n\r\n  return {startIndex, endIndex, page, totalPage};\r\n}\r\n\r\nexport default getQuantityPages;\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useEffect\r\n} from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport { getPopularById } from '../../services/rest.service';\r\nimport markResponseVideos from '../../utils/mark-response-videos';\r\nimport getQuantityPages from '../../utils/get-quantity-pages';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport error from '../../utils/error';\r\nimport config from '../../config';\r\nimport List from '../List';\r\nimport style from './style.module.scss';\r\n\r\nconst PanelLibrary = ({ typeVideo, activeTab }) => {\r\n  const {\r\n    tvs,\r\n    movies,\r\n    setTvs,\r\n    tvPages,\r\n    setMovies,\r\n    isLoading,\r\n    moviePages,\r\n    setTvPages,\r\n    setIsLoading,\r\n    searchString,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  } = useAppContext();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n\r\n    if (searchString.length > 2) {\r\n      history.push(`${config.routes.search.url}/${searchString}/page/1`);\r\n    }\r\n\r\n  }, [history, searchString]);\r\n\r\n  useEffect(() => {\r\n    const loadSearchData = async () => {\r\n\r\n    try {\r\n\r\n      if (isAuthenticated) {\r\n        setIsLoading(true);\r\n        const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n        const user = JSON.parse(userStorage);\r\n\r\n        if (activeTab.match(config.routes.movie.title)) {\r\n\r\n          const moviesLibrary = user?.moviesLibrary || [];\r\n\r\n           const moviesLibraryOnPage = await Promise.all(moviesLibrary.map(async(element) =>\r\n            await getPopularById(element, config.typeVideos.movie)\r\n          ));\r\n\r\n          const markedVideos = markResponseVideos(moviesLibraryOnPage, user?.moviesLibrary);\r\n\r\n          const { startIndex, endIndex, page, totalPage } = getQuantityPages(params.id, markedVideos.length);\r\n\r\n          setMovies(markedVideos.slice(startIndex, endIndex));\r\n          setMoviePages({\r\n            page,\r\n            totalPage,\r\n          });\r\n\r\n        } else {\r\n          const tvShowLibrary = user?.tvShowLibrary || [];\r\n\r\n          const tvShowLibraryOnPage = await Promise.all(tvShowLibrary.map(async(element) =>\r\n            await getPopularById(element, config.typeVideos.tvShow)\r\n          ));\r\n\r\n          const markedVideos = markResponseVideos(tvShowLibraryOnPage, user?.tvShowLibrary);\r\n\r\n          const { startIndex, endIndex, page, totalPage } = getQuantityPages(params.id, markedVideos.length);\r\n\r\n          setTvs(markedVideos.slice(startIndex, endIndex));\r\n          setTvPages({\r\n            page,\r\n            totalPage,\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      setIsLoading(false);\r\n\r\n    } catch (e) {\r\n      error(e);\r\n      setIsLoading(false);\r\n    }\r\n\r\n  }\r\n  loadSearchData();\r\n\r\n  }, [\r\n    setTvs,\r\n    setMovies,\r\n    params.id,\r\n    typeVideo,\r\n    activeTab,\r\n    setTvPages,\r\n    searchString,\r\n    params.query,\r\n    setIsLoading,\r\n    setMoviePages,\r\n    isAuthenticated,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading\r\n      ? <div\r\n        className={style['page']}>\r\n\r\n          {activeTab.match(config.routes.movie.title)\r\n          ? <List\r\n            data={movies}\r\n            detailsUrl={config.routes.movie.url}\r\n            paginationUrl={`${config.routes.myLibrary.url}/${config.typeVideos.movie}/page`}\r\n            activePage={moviePages.page}\r\n            totalPage={moviePages.totalPage}\r\n            typeVideo={config.typeVideos.movie} />\r\n\r\n          : <List\r\n            data={tvs}\r\n            detailsUrl={config.routes.tvShow.url}\r\n            paginationUrl={`${config.routes.myLibrary.url}/${config.typeVideos.tvShow}/page`}\r\n            activePage={tvPages.page}\r\n            totalPage={tvPages.totalPage}\r\n            typeVideo={config.typeVideos.tvShow} />\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n      : <div\r\n        className={style['page__spinner']}>\r\n\r\n          <Spinner\r\n          animation='border'\r\n          variant='secondary' />\r\n\r\n        </div>\r\n\r\n      }\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(PanelLibrary);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useState,\r\n} from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PanelLibrary from '../PanelLibrary';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst MyLibrary = () => {\r\n  const [key, setKey] = useState(config.routes.movie.title);\r\n  const history = useHistory();\r\n\r\n  const choseTab = (k) => {\r\n    setKey(k);\r\n    history.push(config.routes.myLibrary.url);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n      className={style['page']}>\r\n\r\n        <div\r\n        className={style['page__my-library-caption']}>{config.pages.myLibrary.myLibraryCaption}</div>\r\n\r\n        <Tabs\r\n        activeKey={key}\r\n        onSelect={choseTab}>\r\n          <Tab\r\n          eventKey={config.routes.movie.title}\r\n          title={config.routes.movie.title}>\r\n\r\n            <PanelLibrary typeVideo={config.typeVideos.movie} activeTab={key} />\r\n\r\n          </Tab>\r\n          <Tab\r\n          eventKey={config.routes.tvShow.title}\r\n          title={config.routes.tvShow.title}>\r\n\r\n            <PanelLibrary typeVideo={config.typeVideos.tvShow} activeTab={key} />\r\n\r\n          </Tab>\r\n        </Tabs>\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default memo(MyLibrary);\r\n","import React, { memo } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Login from '../components/Login';\r\nimport NotFound from '../components/NotFound';\r\nimport PrivateRoute from '../components/PrivateRoute';\r\nimport CardDetails from '../components/CardDetails';\r\nimport TVShow from '../components/TVShow';\r\nimport Search from '../components/Search';\r\nimport MyLibrary from '../components/MyLibrary';\r\nimport config from '../config';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n\r\n      <Route\r\n      exact\r\n      path={[\r\n        config.routes.home.url,\r\n        config.routes.movie.url,\r\n        config.routes.movie.paginationUrl,\r\n        ]}>\r\n        <PrivateRoute>\r\n          <Home />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route\r\n      exact\r\n      path={[\r\n        config.routes.tvShow.url,\r\n        config.routes.tvShow.paginationUrl,\r\n        ]}>\r\n        <PrivateRoute>\r\n          <TVShow />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route exact path={config.routes.login.url}>\r\n        <PrivateRoute>\r\n          <Login />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route\r\n      exact\r\n      path={[\r\n        config.routes.movie.detailsUrl,\r\n        config.routes.tvShow.detailsUrl,\r\n        ]}>\r\n        <PrivateRoute>\r\n          <CardDetails />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route\r\n      exact\r\n      path={[\r\n        config.routes.myLibrary.url,\r\n        config.routes.myLibrary.paginationUrl,\r\n        ]}>\r\n        <PrivateRoute>\r\n          <MyLibrary />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route\r\n      exact\r\n      path={[\r\n        config.routes.search.searchUrl,\r\n        ]}>\r\n        <PrivateRoute>\r\n          <Search />\r\n        </PrivateRoute>\r\n      </Route>\r\n\r\n      <Route>\r\n        <NotFound />\r\n      </Route>\r\n\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default memo(Routes);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faHome,\r\n  faVideo,\r\n  faSignInAlt,\r\n  faHamburger,\r\n  faFileVideo,\r\n  faSignOutAlt,\r\n  faAddressBook,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { useAppContext } from '../AppContext';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\n\r\nconst SideBar = ({ cleanUp, handleLogout }) => {\r\n  const { isAuthenticated } = useAppContext();\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className={style['side-bar']}>\r\n\r\n        <ul>\r\n          <li>\r\n            <div className={style['logo']}>\r\n              <FontAwesomeIcon\r\n              size='lg'\r\n              icon={faHamburger}/>\r\n            </div>\r\n          </li>\r\n\r\n          {isAuthenticated\r\n          ? <Fragment>\r\n              <li>\r\n\r\n                <NavLink\r\n                activeclassname='text-body font-weight-bold'\r\n                className='text-muted pr-3'\r\n                onClick={cleanUp}\r\n                to={config.routes.home.url}>\r\n                  <FontAwesomeIcon\r\n                  size='lg'\r\n                  icon={faHome}/>\r\n                  <span className={style['nav-text']}>{config.routes.home.title}</span>\r\n\r\n                  </NavLink>\r\n\r\n              </li>\r\n\r\n              <li>\r\n\r\n                <NavLink\r\n                activeclassname='text-body font-weight-bold'\r\n                className='text-muted pr-3'\r\n                onClick={cleanUp}\r\n                to={config.routes.movie.url}>\r\n                  <FontAwesomeIcon\r\n                  size='lg'\r\n                  icon={faFileVideo}/>\r\n                  <span className={style['nav-text']}>{config.routes.movie.title}</span>\r\n\r\n                </NavLink>\r\n\r\n              </li>\r\n\r\n              <li>\r\n\r\n                <NavLink\r\n                activeclassname='text-body font-weight-bold'\r\n                className='text-muted pr-3'\r\n                onClick={cleanUp}\r\n                to={config.routes.tvShow.url}>\r\n                  <FontAwesomeIcon\r\n                  size='lg'\r\n                  icon={faVideo}/>\r\n                  <span className={style['nav-text']}>{config.routes.tvShow.title}</span>\r\n\r\n                </NavLink>\r\n\r\n              </li>\r\n\r\n              <li>\r\n\r\n                <NavLink\r\n                activeclassname='text-body font-weight-bold'\r\n                className='text-muted pr-3'\r\n                onClick={cleanUp}\r\n                to={config.routes.myLibrary.url}>\r\n                  <FontAwesomeIcon\r\n                  size='lg'\r\n                  icon={faAddressBook}/>\r\n                  <span className={style['nav-text']}>{config.routes.myLibrary.title}</span>\r\n\r\n                </NavLink>\r\n\r\n              </li>\r\n\r\n              <li\r\n              onClick={handleLogout}>\r\n\r\n                <NavLink\r\n                activeclassname='text-body font-weight-bold'\r\n                className='text-muted pr-3'\r\n                onClick={cleanUp}\r\n                to={config.routes.login.url}>\r\n                  <FontAwesomeIcon\r\n                  size='lg'\r\n                  icon={faSignOutAlt}/>\r\n                  <span className={style['nav-text']}>{config.routes.logout.title}</span>\r\n\r\n                </NavLink>\r\n\r\n              </li>\r\n\r\n            </Fragment>\r\n\r\n          : <li\r\n            onClick={handleLogout}>\r\n\r\n            <NavLink\r\n            activeclassname='text-body font-weight-bold'\r\n            className='text-muted pr-3'\r\n            onClick={cleanUp}\r\n            to={config.routes.login.url}>\r\n              <FontAwesomeIcon\r\n              size='lg'\r\n              icon={faSignInAlt}/>\r\n              <span className={style['nav-text']}>{config.routes.login.title}</span>\r\n\r\n            </NavLink>\r\n\r\n          </li>\r\n          }\r\n\r\n        </ul>\r\n\r\n        </nav>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(SideBar);\r\n","const debounce = (callback, time) => {\r\n  let interval;\r\n  return (...args) => {\r\n    clearTimeout(interval);\r\n    interval = setTimeout(() => {\r\n      interval = null;\r\n\r\n      callback(...args);\r\n    }, time);\r\n  };\r\n}\r\n\r\nexport default debounce;\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\r\nimport debounce from '../../utils/debounce';\r\nimport { useAppContext } from '../AppContext';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst SearchBox = () => {\r\n  const { userSearchString } = useAppContext();\r\n  const [, setValue] = useState('');\r\n\r\n  const debounced = useCallback(\r\n    debounce((nextValue) => userSearchString(nextValue), config.delay),\r\n    [],\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    const { value: nextValue } = event.target;\r\n    setValue(nextValue);\r\n    debounced(nextValue);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <Form\r\n      inline\r\n      className='pr-3'>\r\n\r\n        <InputGroup\r\n        className={style['search-box']}>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id='pre-text'>@</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Search'\r\n            className={style['search-box__input']}\r\n            name='search'\r\n            aria-describedby='pre-text'\r\n            onChange={handleChange} />\r\n        </InputGroup>\r\n\r\n      </Form>\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(SearchBox);\r\n","import React, {\r\n  Fragment,\r\n  memo,\r\n} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { NavItem } from 'react-bootstrap';\r\nimport { useAppContext } from '../AppContext';\r\nimport SearchBox from '../SearchBox';\r\nimport config from '../../config';\r\nimport style from './style.module.scss';\r\n\r\nconst NavBar = ({ cleanUp, handleLogout }) => {\r\n  const { isAuthenticated } = useAppContext();\r\n \r\n  return (\r\n    <Fragment>\r\n      <div\r\n      className={style['nav-bar']}>\r\n\r\n        {isAuthenticated\r\n        ? <Fragment>\r\n\r\n            <SearchBox />\r\n\r\n            <NavItem\r\n            className='pt-1'\r\n            onClick={handleLogout}>\r\n\r\n              <NavLink\r\n              activeclassname='text-body font-weight-bold'\r\n              className='text-muted'\r\n              onClick={cleanUp}\r\n              to={config.routes.login.url}>{config.routes.logout.title}</NavLink>\r\n\r\n            </NavItem>\r\n\r\n          </Fragment>\r\n\r\n        : <NavItem>\r\n\r\n            <NavLink\r\n            activeclassname='text-body font-weight-bold'\r\n            className='text-muted'\r\n            onClick={cleanUp}\r\n            to={config.routes.login.url}>{config.routes.login.title}</NavLink>\r\n\r\n          </NavItem>\r\n        }\r\n\r\n      </div>\r\n\r\n    </Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import React, { Fragment, memo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppContext } from '../AppContext';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport SideBar from '../SideBar';\r\nimport NavBar from '../NavBar';\r\nimport config from '../../config';\r\n\r\nconst Bars = () => {\r\n  const { userHasAuthenticated, userSearchString } = useAppContext();\r\n  const history = useHistory();\r\n\r\n  const cleanUp = () => {\r\n    userSearchString('');\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    userHasAuthenticated(false);\r\n    const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n    let user = JSON.parse(userStorage);\r\n\r\n    if (user) {\r\n\r\n      user.isAuth = false;\r\n\r\n    } else {\r\n\r\n      user = {\r\n        isAuth: false,\r\n      };\r\n\r\n    }\r\n    await asyncLocalStorage.setItem(config.keyLocalStorage, JSON.stringify(user));\r\n    history.push(`${config.routes.login.url}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar\r\n      cleanUp={cleanUp}\r\n      handleLogout={handleLogout} />\r\n\r\n      <SideBar\r\n      cleanUp={cleanUp}\r\n      handleLogout={handleLogout} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(Bars);\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport Routes from '../../routes';\r\nimport Bars from '../Bars';\r\nimport history from '../../utils/history';\r\nimport { AppContext } from '../AppContext';\r\nimport asyncLocalStorage from '../../services/local-storage.service';\r\nimport config from '../../config';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, userHasAuthenticated] = useState(\r\n    asyncLocalStorage.getItem(config.keyLocalStorage)\r\n  );\r\n  const [moviePages, setMoviePages] = useState({\r\n    page: 0,\r\n    totalPage: 0,\r\n  });\r\n  const [searchString, userSearchString] = useState('');\r\n  const [tvPages, setTvPages] = useState({\r\n    page: 0,\r\n    totalPage: 0,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [movies, setMovies] = useState([]);\r\n  const [tvs, setTvs] = useState([]);\r\n  const [runPush, setRunPush] = useState('');\r\n\r\n  useEffect(() => {\r\n    const checkLocalStorage = async() => {\r\n      const userStorage = await asyncLocalStorage.getItem(config.keyLocalStorage);\r\n      const user = JSON.parse(userStorage);\r\n      userHasAuthenticated(user?.isAuth || false);\r\n    }\r\n    checkLocalStorage();\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        tvs,\r\n        movies,\r\n        setTvs,\r\n        runPush,\r\n        tvPages,\r\n        isLoading,\r\n        setMovies,\r\n        setRunPush,\r\n        moviePages,\r\n        setTvPages,\r\n        searchString,\r\n        setIsLoading,\r\n        setMoviePages,\r\n        isAuthenticated,\r\n        userSearchString,\r\n        userHasAuthenticated,\r\n      }}>\r\n        <Router history={history}>\r\n          <Bars />\r\n          <Routes />\r\n        </Router>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './store';\r\nimport App from './components/App';\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-card\":\"style_section-card__428CY\",\"section-card__wrapper\":\"style_section-card__wrapper__1rvXY\",\"section-card__btn\":\"style_section-card__btn__MfEA5\",\"section-card__img\":\"style_section-card__img__1CFbR\",\"bookmark\":\"style_bookmark__IR6qp\",\"bookmark-input\":\"style_bookmark-input__1uM2N\",\"bookmark-star\":\"style_bookmark-star__3GLzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-card\":\"style_section-card__skU5l\",\"section-card__image\":\"style_section-card__image__2tULK\",\"section-card__description\":\"style_section-card__description__--Q3u\",\"section-card__graph\":\"style_section-card__graph__34gtM\",\"page\":\"style_page__aMjTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__2meyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__3mTtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__2veyq\",\"page__spinner\":\"style_page__spinner__2q7K-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__16OKR\",\"page__search-results-title\":\"style_page__search-results-title__3QpD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__2sTzc\",\"page__spinner\":\"style_page__spinner__-3LEb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"style_page__3DEW3\",\"page__my-library-caption\":\"style_page__my-library-caption__3vqzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-box\":\"style_search-box__1a5Le\",\"search-box__input\":\"style_search-box__input__2am79\"};"],"sourceRoot":""}